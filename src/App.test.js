import { render, screen, fireEvent } from '@testing-library/react';
import App from './App';
import Parade from './components/Parade';

test('test that close button is disabled & open button is NOT disabled on load. when I click the open button, the open button is disabled and the close button is no longer disabled. then, when I click on the close button, the close button is disabled and the open button is no longer disabled', () => {
  render(<App />);
  const openButton = screen.getByText(/Open/i);
  const closeButton = screen.getByText(/Close/i);
  expect(closeButton).toBeDisabled();
  expect(openButton).not.toBeDisabled();
  fireEvent.click(openButton);
  expect(closeButton).not.toBeDisabled();
  expect(openButton).toBeDisabled();
  fireEvent.click(closeButton);
  expect(closeButton).toBeDisabled();
  expect(openButton).not.toBeDisabled();
});

test('test that animal parade buttons are adding their respective emojis to the screen', () => {
  render(<App />);
  const rhinoButton = screen.getByText(/🦏/i);
  const rhinoCountBeforeButtonClick = screen.queryAllByText(/🦏/i);
  expect(rhinoCountBeforeButtonClick.length).toBe(1);
  fireEvent.click(rhinoButton);
  const rhinoCountAfterButtonClick = screen.queryAllByText(/🦏/i);
  expect(rhinoCountAfterButtonClick.length).toBe(2);
  const gorillaButton = screen.getByText(/🦍/i);
  const gorillaCountBeforeButtonClick = screen.queryAllByText(/🦍/i);
  expect(gorillaCountBeforeButtonClick.length).toBe(1);
  fireEvent.click(gorillaButton);
  const gorillaCountAfterButtonClick = screen.queryAllByText(/🦍/i);
  expect(gorillaCountAfterButtonClick.length).toBe(2);
  const cheetahButton = screen.getByText(/🐆/i);
  const cheetahCountBeforeButtonClick = screen.queryAllByText(/🐆/i);
  expect(cheetahCountBeforeButtonClick.length).toBe(1);
  fireEvent.click(cheetahButton);
  const cheetahCountAfterButtonClick = screen.queryAllByText(/🐆/i);
  expect(cheetahCountAfterButtonClick.length).toBe(2);
  const zebraButton = screen.getByText(/🦓/i);
  const zebraCountBeforeButtonClick = screen.queryAllByText(/🦓/i);
  expect(zebraCountBeforeButtonClick.length).toBe(1);
  fireEvent.click(zebraButton);
  const zebraCountAfterButtonClick = screen.queryAllByText(/🦓/i);
  expect(zebraCountAfterButtonClick.length).toBe(2);
  const elephantButton = screen.getByText(/🐘/i);
  const elephantCountBeforeButtonClick = screen.queryAllByText(/🐘/i);
  expect(elephantCountBeforeButtonClick.length).toBe(1);
  fireEvent.click(elephantButton);
  const elephantCountAfterButtonClick = screen.queryAllByText(/🐘/i);
  expect(elephantCountAfterButtonClick.length).toBe(2);
  const hippoButton = screen.getByText(/🦛/i);
  const hippoCountBeforeButtonClick = screen.queryAllByText(/🦛/i);
  expect(hippoCountBeforeButtonClick.length).toBe(1);
  fireEvent.click(hippoButton);
  const hippoCountAfterButtonClick = screen.queryAllByText(/🦛/i);
  expect(hippoCountAfterButtonClick.length).toBe(2);
  const tigerButton = screen.getByText(/🐅/i);
  const tigerCountBeforeButtonClick = screen.queryAllByText(/🐅/i);
  expect(tigerCountBeforeButtonClick.length).toBe(1);
  fireEvent.click(tigerButton);
  const tigerCountAfterButtonClick = screen.queryAllByText(/🐅/i);
  expect(tigerCountAfterButtonClick.length).toBe(2);
  const giraffeButton = screen.getByText(/🦒/i);
  const giraffeCountBeforeButtonClick = screen.queryAllByText(/🦒/i);
  expect(giraffeCountBeforeButtonClick.length).toBe(1);
  fireEvent.click(giraffeButton);
  const giraffeCountAfterButtonClick = screen.queryAllByText(/🦒/i);
  expect(giraffeCountAfterButtonClick.length).toBe(2);
});
